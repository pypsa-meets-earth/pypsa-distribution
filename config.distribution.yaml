# SPDX-FileCopyrightText: : 2021 The PyPSA-Earth Authors
#
# SPDX-License-Identifier: CC0-1.0

version: 0.0.1
tutorial: false

logging:
  level: INFO
  format: "%(levelname)s:%(name)s:%(message)s"

# option to disable the subworkflow to ease the analyses
disable_subworkflow: false

enable:
  # prepare_links_p_nom: false
  retrieve_databundle: false
  retrieve_cost_data: true
  download_osm_data: true
  download_osm_buildings: true
  download_osm_method: overpass # or earth_osm
  # If "build_cutout" : true # requires cds API key
  # https://cds.climate.copernicus.eu/api-how-to
  # More information
  # https://atlite.readthedocs.io/en/latest/introduction.html#datasets
  build_cutout: false
  build_natura_raster: false  # If True, then build_natura_raster can be run
  manual_add_buses_lines: true #If True, then buses and lines must be added manually below

scenario:
  simpl: ['']
  ll: ['copt']
  clusters: [55]
  opts: [Co2L-3H]  # Co2L adds an overall absolute carbon-dioxide emissions limit
                   # 3H resamples the time-resolution by averaging over every 3 snapshots

countries: ["TR"]
# Can be replaced by country ["NG", "BJ"] or user specific region, more at
# https://pypsa-earth.readthedocs.io/en/latest/configuration.html#top-level-configuration

year: "2019"  # Year setting allows the choice of which data to download (es. Worldpop_data)

snapshots:
  start: "2013-03-01"
  end: "2013-03-07"
  inclusive: "left"  # end is not inclusive

ramp:
  days: 365  # Days allows to select the number of simulated days to ramp

tier:
  tier_percent: [0.3, 0.2, 0.2, 0.1, 0.15, 0.05]
  # Tier allows selection of the percentage breakdown of the population into
  # the different tiers of energy access. Values range from the percentage of
  # population belonging to tier 0 to those belonging to tier 5.

house_area_limit:
  area_limit: 255  # All buildings without a specified tag, having an area less than house_limit will be considered houses

build_demand_type:
  type: "From_file"
  std: "on"
# type allows to select the mode by which the microgrid demand profile is generated.
# From_file = a predetermined hourly profile is used
# Ramp = an average hourly profile is calculated by exploiting the ramp tool when std on also the
#     standard deviation is calculated and used to calculate demand.

# definition of the Coordinate Reference Systems
crs:
  geo_crs: EPSG:4326  # general geographic projection, not used for metric measures.
                      # "EPSG:4326" is the standard used by OSM and google maps
  distance_crs: EPSG:3857  # projection for distance measurements only. Possible recommended values are "EPSG:3857" (used by OSM and Google Maps)
  area_crs: ESRI:54009  # projection for area measurements only. Possible recommended values are Global Mollweide "ESRI:54009"

electricity:
  voltage: 0.22
  line_type: "24-AL1/4-ST1A 0.4"

  max_hours:
    battery: 6
    H2: 168

  extendable_carriers:
    Generator: [solar, onwind, diesel]
    StorageUnit: ["lithium", "lead acid"]
  conventional_carriers: [diesel]

  renewable_carriers: [solar, onwind]

# TODO: Needs to be adjusted for Africa
costs:
  year: 2030
  discountrate: 0.07  # From a Lion Hirth paper, also reflects average of Noothout et al 2016
  USD2013_to_EUR2013: 0.7532  # [EUR/USD] ECB: https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-usd.en.html
  marginal_cost:  # EUR/MWh
    solar: 0.01
    onwind: 0.015
    offwind: 0.015
    hydro: 0.
    H2: 0.
    electrolysis: 0.
    fuel cell: 0.
    battery: 0.
    battery inverter: 0.
  emission_prices:  # in currency per tonne emission, only used with the option Ep
    co2: 0.

solving:
  options:
    formulation: kirchhoff
    load_shedding: true
    noisy_costs: true
    min_iterations: 4
    max_iterations: 6
    clip_p_max_pu: 0.01
    skip_iterations: true
    track_iterations: false
    # nhours: 10
  solver:
    name: glpk

tech_modelling:
  general_vre: ["onwind", "solar"]
  storage_techs: ["lithium", "lead acid"]
  conv_techs: ["diesel"]
  load_carriers: ["AC load"]

microgrid_bus_list:  # MICROGRIDS IN NIGERIA
  microgrid_1:
    bus_1:       # WORKING
      lat: 37.1
      lon: 35.34
    bus_2:       # WORKING
      lat: 37.08
      lon: 35.39
    bus_3:       # WORKING
      lat: 37
      lon: 35.37
    bus_4:       # WORKING
      lat: 21.3
      lon: 30.5
    bus_5:
      lon: 70
      lat: 70

  microgrid_2:
    bus_1:     # WORKING
      lat: 4.7008
      lon: 7.3714
    bus_2:     # WORKING
      lat: 4.6351
      lon: 7.2916
    bus_3:     # WORKING
      lat: 4.6951
      lon: 7.3616
    bus_4:     # WORKING
      lat: 4.6551
      lon: 7.3116
    bus_5:     # WORKING
      lat: 14.6551
      lon: 17.3116

microgrid_bus_connections:  # MICROGRIDS IN NIGERIA
  microgrid_1:
    bus_1: ["bus_2", "bus_4", "bus_3", "bus_5"]     # WORKING
    bus_2: ["bus_3", "bus_4", "bus_5"]     # WORKING

  microgrid_2:
    bus_1: ["bus_3", "bus_4", "bus_5"]     # WORKING
    bus_2: ["bus_3", "bus_4", "bus_5"]     # WORKING

  microgrid_interconnections:
    microgrid_1: ["bus_3"]
    microgrid_2: ["bus_2"]


microgrids_list:  # MICROGRIDS IN NIGERIA
  microgrid_1:     # WORKING
    lon_min: 35.32
    lon_max: 35.40
    lat_max: 37.12
    lat_min: 36.95

  microgrid_2:     # WORKING
    lon_max: 7.3914
    lon_min: 7.2616
    lat_min: 4.6151
    lat_max: 4.7208

load:
  scaling_factor: 15000

buildings:
  n_clusters: 10
